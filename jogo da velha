#include <iostream>

using namespace std;

int main(){//Guilherme França Stelmann 13678571
    int i=2,c1,c2,v=0,pl=0,pc=0,j=0,ct=0,cl=0,validade;
    char ji,tabuleiro [3][3];//essa matriz reprezenta o tabuleiro
    while(pc<3){//povoando o tabuleiro, pois caso não tenha nada nas casas, é possivel que bugs aconteçam
        tabuleiro[pl][pc]='_';
        if(pl!=2){
            pl=pl+1;}
        else{
            pl=0;
            pc=pc+1;
            }
    }
    while(i==2){//certificando se a jogada inicial é x ou o, após isso, os lances serão automáticos
      cout<<"insira quem vai começar, x ou o"<<endl;
      cin>>ji;
      if(ji=='X'||ji=='x'){
        i=0;
      }
      else if(ji=='o'||ji=='O'||ji=='0'){
        i=1;
      }
      else{
        cout<<"insira um valor válido"<<endl;
      }
      }
    cout<<"      c1  c2  c3"<<endl;//setup para mostrar o tabuleiro
    cout<<"  l1  "<<tabuleiro [0][0]<<" | "<<tabuleiro [0][1]<<" | "<<tabuleiro[0][2]<<endl;
    cout<<"     -----------"<<endl;
    cout<<"  l2  "<<tabuleiro [1][0]<<" | "<<tabuleiro [1][1]<<" | "<<tabuleiro[1][2]<<endl;
    cout<<"     -----------"<<endl;
    cout<<"  l3  "<<tabuleiro [2][0]<<" | "<<tabuleiro [2][1]<<" | "<<tabuleiro[2][2]<<endl;
    cout<<endl<<"Insira a linha e depois a coluna"<<endl;
    while(v==0 && j<9){//esse while é onde o loop acontece, é limitado pelo numero de jogadas e é interrompido em caso de vitória
        cin>>c1>>c2;
        validade=1;//validade impede que jogadas ocorram "em cima" de outras jogadas
        if(tabuleiro[c1-1][c2-1]!='_' ||( c1!=1 && c1!=2 && c1!=3) || (c2!=1 && c2!=2 && c2!=3)){
            validade=0;
            cout<<"jogada não válida, jogue novamente"<<endl;
        }
        if((i+j)%2==0 && validade==1){//cerificando se a jogada inicial é 
            tabuleiro[c1-1][c2-1]='x';
            j=j+1;
            }
        else if((i+j)%2==1 && validade==1){
            tabuleiro[c1-1][c2-1]='o';
            j=j+1;
            }
        ct=0;
        cl=0;
        if((tabuleiro[0][0]==tabuleiro[1][1] && tabuleiro[1][1]==tabuleiro[2][2])||(tabuleiro[0][2]==tabuleiro[1][1]&&tabuleiro[1][1]==tabuleiro[2][0])){//testando se alguma diagonal foi vitoriosa
            if(tabuleiro[1][1]=='x'){
                v=1;
            }
            else if(tabuleiro[1][1]=='o'){
                v=2;
            }
        }
        while(ct<3){
            if(tabuleiro[0][ct]!='_'&&tabuleiro[0][ct]==tabuleiro[1][ct]&&tabuleiro[1][ct]==tabuleiro[2][ct]){//testando se alguma linha é vitoriosa
                if(tabuleiro[1][ct]=='x'){
                    v=1;
                }
                else if(tabuleiro[1][ct]=='o'){
                    v=2;
                }
            }
            ct=ct+1;
        }
        while(cl<3){
            if(tabuleiro[cl][0]!='_'&&tabuleiro[cl][0]==tabuleiro[cl][1]&&tabuleiro[cl][1]==tabuleiro[cl][2]){//testando se alguma coluna é vitoriosa
                if(tabuleiro[cl][1]=='x'){
                    v=1;
                }
                else if(tabuleiro[cl][1]=='o'){
                    v=2;
                }
            }
            cl=cl+1;
        }
        cout<<"      c1  c2  c3"<<endl;//imprimindo o tabuleiro novamente
        cout<<"  l1  "<<tabuleiro [0][0]<<" | "<<tabuleiro [0][1]<<" | "<<tabuleiro[0][2]<<endl;
        cout<<"     -----------"<<endl;
        cout<<"  l2  "<<tabuleiro [1][0]<<" | "<<tabuleiro [1][1]<<" | "<<tabuleiro[1][2]<<endl;
        cout<<"     -----------"<<endl;
        cout<<"  l3  "<<tabuleiro [2][0]<<" | "<<tabuleiro [2][1]<<" | "<<tabuleiro[2][2]<<endl;
        cout<<endl<<"Insira a linha e depois a coluna"<<endl;
}

    if(v==1){//se v=1, x venceu
        cout<<"parabéns jogador com x, voce venceu!!!!!!!"<<endl;
        return 0;
    }
    else if(v==2){//nesse caso y venceu
        cout<<"parabéns jogador com o, voce venceu!!!!!!!"<<endl;
        return 0;
    }
    else if(j==9){//caso existam nove jogadas e não houve vencedor, deu velha,importante ressaltar que caso a jogada seja inválida ela não conta
        cout<<"deu velha"<<endl;
        return 0;
    }
}
